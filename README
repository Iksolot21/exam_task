# Анализ изображений с преобразованием Радона

Веб-приложение на Flask для анализа изображений с использованием преобразования Радона. Этот проект позволяет генерировать тестовые изображения фантома Шеппа-Логана, добавлять шум Гаусса, выполнять преобразование Радона и анализировать спектры изображений.

## Функциональные возможности

- Генерация тестовых изображений фантома Шеппа-Логана
- Добавление шума Гаусса с настраиваемыми параметрами
- Выполнение преобразования Радона и визуализация синограмм
- Анализ срезов синограмм под различными углами
- Расчет и визуализация спектров
- Применение частотных фильтров
- Анализ SSIM для набора зашумленных изображений

## Установка и запуск

### Метод 1: Прямая установка

1. Клонируйте репозиторий:
```bash
git clone https://github.com/yourusername/radon-transform-analysis.git
cd radon-transform-analysis
```

2. Создайте и активируйте виртуальное окружение:
```bash
python -m venv venv
source venv/bin/activate  # На Windows: venv\Scripts\activate
```

3. Установите зависимости:
```bash
pip install -r requirements.txt
```

4. Запустите приложение:
```bash
python app.py
```

Приложение будет доступно по адресу http://localhost:5000

### Метод 2: Использование Docker

1. Соберите Docker-образ:
```bash
docker build -t radon-transform-app .
```

2. Запустите контейнер:
```bash
docker run -p 5000:5000 radon-transform-app
```

Приложение будет доступно по адресу http://localhost:5000

## Развертывание на VPS/веб-сервере

Для развертывания на VPS или другом веб-сервере рекомендуется использовать WSGI-сервер, например Gunicorn или uWSGI, вместе с Nginx в качестве обратного прокси.

### Установка и настройка с Gunicorn и Nginx

1. Установите Gunicorn:
```bash
pip install gunicorn
```

2. Создайте systemd-сервис для запуска приложения:

Создайте файл `/etc/systemd/system/radon-app.service`:
```
[Unit]
Description=Radon Transform Analysis Flask App
After=network.target

[Service]
User=yourusername
WorkingDirectory=/path/to/radon-transform-analysis
ExecStart=/path/to/radon-transform-analysis/venv/bin/gunicorn -w 4 -b 127.0.0.1:8000 wsgi:app
Restart=always

[Install]
WantedBy=multi-user.target
```

3. Настройте Nginx как обратный прокси:

Создайте файл конфигурации `/etc/nginx/sites-available/radon-app`:
```
server {
    listen 80;
    server_name your_domain.com www.your_domain.com;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
```

4. Активируйте конфигурацию и перезапустите сервисы:
```bash
sudo ln -s /etc/nginx/sites-available/radon-app /etc/nginx/sites-enabled
sudo systemctl enable radon-app
sudo systemctl start radon-app
sudo systemctl restart nginx
```

## Техническая информация

- Python 3.10+
- Flask для веб-сервера
- Matplotlib и NumPy для обработки и визуализации данных
- Scikit-image для преобразования Радона и работы с изображениями
- Phantominator для генерации фантома Шеппа-Логана

## Лицензия

MIT